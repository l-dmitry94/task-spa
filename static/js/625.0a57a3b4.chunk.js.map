{"version":3,"file":"static/js/625.0a57a3b4.chunk.js","mappings":"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","sources":["components/ContinueButton/ContinueButton.styled.jsx","components/ContinueButton/ContinueButton.jsx","components/Tabs/Tabs.styled.jsx","components/Tabs/Tabs.jsx","pages/Measure.jsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nconst ContinueButtonStyled = styled(Link)`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    height: 50px;\n    border-radius: 12px;\n    background-color: ${props => props.theme.colors.green};\n    color: ${props => props.theme.colors.white};\n    font-family: ${props => props.theme.fonts.inter};\n    font-size: 18px;\n    font-weight: 700;\n    line-height: 1.44;\n    letter-spacing: 0.01em;\n    margin-top: 100px;\n\n    ${({ enter, select }) =>\n        enter === 'true' || select === 'true'\n            ? `opacity: 1; \n                pointer-events: auto`\n            : `opacity: 0.3; \n                pointer-events: none`}\n`;\n\nexport default ContinueButtonStyled;\n","import { useUser } from 'hooks/UserContext';\nimport ContinueButtonStyled from './ContinueButton.styled';\nconst ContinueButton = ({\n    text,\n    to,\n    data,\n    isEnterData,\n    selectedItems,\n    isSelectedItems,\n}) => {\n    const { addInfo } = useUser();\n\n    if (data || isEnterData) {\n        return (\n            <ContinueButtonStyled\n                to={to}\n                enter={isEnterData.toString()}\n                onClick={() => addInfo(data)}\n            >\n                {text}\n            </ContinueButtonStyled>\n        );\n    } else if (selectedItems || isSelectedItems) {\n        return (\n            <ContinueButtonStyled\n                to={to}\n                onClick={() => addInfo({selectedItems})}\n                select={isSelectedItems.toString()}\n            >\n                {text}\n            </ContinueButtonStyled>\n        );\n    }\n};\n\nexport default ContinueButton;\n","import styled from '@emotion/styled';\n\nconst Styled = {\n    TabsSection: styled.section`\n        margin-top: 90px;\n    `,\n    TabList: styled.ul`\n        display: flex;\n        border-radius: 10px;\n        overflow: hidden;\n        border: ${props => `1px solid ${props.theme.colors.green}`};\n        margin-bottom: 10px;\n    `,\n\n    TabItem: styled.li`\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        flex: 0.5;\n        height: 32px;\n        color: ${props => props.theme.colors.green};\n        text-align: center;\n        font-family: ${props => props.theme.fonts.inter};\n        font-size: 12px;\n        font-style: normal;\n        font-weight: 800;\n        line-height: normal;\n        letter-spacing: 2.5px;\n        text-transform: uppercase;\n        cursor: pointer;\n        ${props =>\n            props.active &&\n            `\n                background-color: ${props.theme.colors.opacitryGreen}\n  `}\n    `,\n\n    InputList: styled.ul`\n        display: flex;\n        flex-direction: column;\n        gap: 10px;\n    `,\n\n    Input: styled.input`\n        box-sizing: border-box;\n        width: 100%;\n        height: 64px;\n        color: ${props => props.theme.colors.generalBlack};\n        font-family: ${props => props.theme.fonts.inter};\n        font-size: 14px;\n        line-height: 1.71;\n        letter-spacing: 0.02em;\n        border-radius: 10px;\n        outline: transparent;\n        border: ${props => `1px solid ${props.theme.colors.lightGrey}`};\n        background: ${props => props.theme.colors.white};\n        transition: border-color .3s linear;\n        padding: 0 15px;\n\n        &::placeholder {\n            color: ${props => props.theme.colors.generalBlack};\n            font-family: ${props => props.theme.fonts.inter};\n            opacity: 1\n        }\n\n        &:is(:hover, :focus) {\n            border-color: ${props => props.theme.colors.green};\n        }\n    `,\n};\n\nexport default Styled;\n","import { Fragment, useState } from 'react';\nimport Styled from './Tabs.styled';\nimport Banner from 'components/Banner';\nimport ContinueButton from 'components/ContinueButton';\n\nconst tabsPanel = ['ft', 'cm'];\n\nconst initialMeasureFt = {\n    heightFt: '',\n    weightFt: '',\n};\n\nconst initialMeasureCm = {\n    heightCm: '',\n    weightCm: '',\n};\n\nconst { TabsSection, TabList, TabItem, InputList, Input } = Styled;\n\nconst Tabs = ({ tabs }) => {\n    const [activeIndexTab, setActiveIndex] = useState(0);\n    const [measuresFt, setMeasuresFt] = useState({ ...initialMeasureFt });\n    const [measuresCm, setMeasuresCm] = useState({ ...initialMeasureCm });\n    const [isEnterData, setIsEnterData] = useState(false)\n\n    const changeIndex = index => {\n        setActiveIndex(index);\n    };\n\n    const onChangeInput = (event, tabPanel) => {\n        const { name, value } = event.target;\n\n        if (tabPanel === 'ft') {\n            setMeasuresFt({\n                ...measuresFt,\n                [name]: value,\n            });\n        } else if (tabPanel === 'cm') {\n            setMeasuresCm({\n                ...measuresCm,\n                [name]: value,\n            });\n        }\n\n        if((measuresFt.heightFt && measuresFt.weightFt) || (measuresCm.heightCm && measuresCm.weightCm)) {\n            setIsEnterData(value !== \"\")\n        }\n    };\n\n    const tabsItems = tabs.map((tab, index) => (\n        <TabItem\n            key={index}\n            active={index === activeIndexTab}\n            onClick={() => changeIndex(index)}\n        >\n            {tab}\n        </TabItem>\n    ));\n\n    const tabPanelItems = tabsPanel.map((tabPanel, index) => (\n        <Fragment key={index}>\n            {index === activeIndexTab && (\n                <InputList>\n                    <Input\n                        type=\"number\"\n                        placeholder={`Height(${tabPanel})`}\n                        value={\n                            tabPanel === 'ft'\n                                ? measuresFt.heightFt\n                                : measuresCm.heightCm\n                        }\n                        name={tabPanel === 'ft' ? 'heightFt' : 'heightCm'}\n                        onChange={event => onChangeInput(event, tabPanel)}\n                    />\n                    <Input\n                        type=\"number\"\n                        placeholder={`Current Weight(${tabPanel}): `}\n                        value={\n                            tabPanel === 'ft'\n                                ? measuresFt.weightFt\n                                : measuresCm.weightCm\n                        }\n                        name={tabPanel === 'ft' ? 'weightFt' : 'weightCm'}\n                        onChange={event => onChangeInput(event, tabPanel)}\n                    />\n                </InputList>\n            )}\n        </Fragment>\n    ));\n\n    return (\n        <>\n            <TabsSection>\n                <TabList>{tabsItems}</TabList>\n                {tabPanelItems}\n            </TabsSection>\n            <Banner\n                title=\"Measure Yourself\"\n                text=\"What are your height and body weight?\"\n            />\n            <ContinueButton\n                text=\"Continue\"\n                to=\"/step-3\"\n                data={{...measuresFt, ...measuresCm}}\n                isEnterData={isEnterData}\n            />\n        </>\n    );\n};\n\nexport default Tabs;\n","import BackLink from 'components/BackLink';\nimport Container from 'components/Container';\nimport Main from 'components/Main';\nimport Tabs from 'components/Tabs';\n\nconst Measure = ({ to }) => {\n    return (\n        <Main>\n            <BackLink to={to} />\n            <Container>\n                <Tabs tabs={['Imperial', 'Metric']} />\n            </Container>\n        </Main>\n    );\n};\n\nexport default Measure;\n"],"names":["styled","Link","_templateObject","_taggedTemplateLiteral","props","theme","colors","green","white","fonts","inter","_ref","enter","select","text","to","data","isEnterData","selectedItems","isSelectedItems","addInfo","useUser","_jsx","ContinueButtonStyled","toString","onClick","children","TabsSection","TabList","_templateObject2","concat","TabItem","_templateObject3","active","opacitryGreen","InputList","_templateObject4","Input","_templateObject5","generalBlack","lightGrey","tabsPanel","initialMeasureFt","heightFt","weightFt","initialMeasureCm","heightCm","weightCm","Styled","tabs","_useState","useState","_useState2","_slicedToArray","activeIndexTab","setActiveIndex","_useState3","_objectSpread","_useState4","measuresFt","setMeasuresFt","_useState5","_useState6","measuresCm","setMeasuresCm","_useState7","_useState8","setIsEnterData","onChangeInput","event","tabPanel","_event$target","target","name","value","_defineProperty","tabsItems","map","tab","index","changeIndex","tabPanelItems","Fragment","_jsxs","type","placeholder","onChange","_Fragment","Banner","title","ContinueButton","Main","BackLink","Container","Tabs"],"sourceRoot":""}