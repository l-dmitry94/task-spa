{"version":3,"file":"static/js/793.d68e2546.chunk.js","mappings":"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","sources":["components/ContinueButton/ContinueButton.styled.jsx","components/ContinueButton/ContinueButton.jsx","data/behaviors.js","components/BehaviorsContent/BehaviorsContent.styled.jsx","components/BehaviorsContent/BehaviorsContentItem/BehaviorsContentItem.styled.jsx","components/BehaviorsContent/BehaviorsContentItem/BehaviorsContentItem.jsx","components/BehaviorsContent/BehaviorsContent.jsx","pages/Behaviors.jsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nconst ContinueButtonStyled = styled(Link)`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    height: 50px;\n    border-radius: 12px;\n    background-color: ${props => props.theme.colors.green};\n    color: ${props => props.theme.colors.white};\n    font-family: ${props => props.theme.fonts.inter};\n    font-size: 18px;\n    font-weight: 700;\n    line-height: 1.44;\n    letter-spacing: 0.01em;\n    margin-top: 100px;\n\n    ${({ enter, select }) =>\n        enter === 'true' || select === 'true'\n            ? `opacity: 1; \n                pointer-events: auto`\n            : `opacity: 0.3; \n                pointer-events: none`}\n`;\n\nexport default ContinueButtonStyled;\n","import { useUser } from 'hooks/UserContext';\nimport ContinueButtonStyled from './ContinueButton.styled';\nconst ContinueButton = ({\n    text,\n    to,\n    data,\n    isEnterData,\n    selectedItems,\n    isSelectedItems,\n}) => {\n    const { addInfo } = useUser();\n\n    if (data || isEnterData) {\n        return (\n            <ContinueButtonStyled\n                to={to}\n                enter={isEnterData.toString()}\n                onClick={() => addInfo(data)}\n            >\n                {text}\n            </ContinueButtonStyled>\n        );\n    } else if (selectedItems || isSelectedItems) {\n        return (\n            <ContinueButtonStyled\n                to={to}\n                onClick={() => addInfo({selectedItems})}\n                select={isSelectedItems.toString()}\n            >\n                {text}\n            </ContinueButtonStyled>\n        );\n    }\n};\n\nexport default ContinueButton;\n","import image1 from '../images/step-3/behavior-1.png';\nimport image2 from '../images/step-3/behavior-2.png';\nimport image3 from '../images/step-3/behavior-3.png';\nimport image4 from '../images/step-3/behavior-4.png';\nimport image5 from '../images/step-3/behavior-5.png';\nimport image6 from '../images/step-3/behavior-6.png';\n\nconst behaviors = [\n    {\n        text: \"I don't rest enough\",\n        image: image1,\n    },\n    {\n        text: 'I have a sweet tooth',\n        image: image2,\n    },\n    {\n        text: 'I have too much soda',\n        image: image3,\n    },\n    {\n        text: 'I eat many salty foods',\n        image: image4,\n    },\n    {\n        text: 'I enjoy midnight snacks',\n        image: image5,\n    },\n    {\n        text: 'None of the above',\n        image: image6,\n    },\n];\n\nexport default behaviors;\n","import styled from \"@emotion/styled\";\n\nconst Styled = {\n    BehaviorsList: styled.ul`\n        display: flex;\n        flex-wrap: wrap;\n        gap: 15px;\n    `\n}\n\nexport default Styled;","import styled from '@emotion/styled';\n\nconst Styled = {\n    BehaviorItem: styled.li`\n        flex-basis: calc((100% - 15px) / 2);\n        display: flex;\n        align-items: center;\n        gap: 10px;\n        box-sizing: border-box;\n        border-radius: 15px;\n        border: ${props => `1px solid ${props.theme.colors.lightGrey}`};\n        background: ${props => props.theme.colors.white};\n        cursor: pointer;\n        padding: 12px 24px 12px 15px;\n\n        ${({ selected }) =>\n            selected && `border: 1px solid green`}\n    `,\n    BehaviorText: styled.p`\n        color: ${props => props.theme.colors.generalBlack};\n        font-family: ${props => props.theme.fonts.inter};\n        font-size: 12px;\n        font-weight: 400;\n        line-height: 1.5;\n        letter-spacing: 0.025em;\n    `,\n};\n\nexport default Styled;\n","import Styled from \"./BehaviorsContentItem.styled\";\n\nconst {BehaviorItem, BehaviorText} = Styled;\nconst BehaviorsContentItem = ({item, items, handleChooseItem}) => {\n    return (\n        <BehaviorItem onClick={() => handleChooseItem(item.text)} selected={items.includes(item.text)}>\n            <img src={item.image} alt={item.text} />\n            <BehaviorText>{item.text}</BehaviorText>\n        </BehaviorItem>\n    )\n}\n\nexport default BehaviorsContentItem;","import { useEffect, useState } from 'react';\nimport Styled from './BehaviorsContent.styled';\nimport BehaviorsContentItem from './BehaviorsContentItem';\nimport ContinueButton from 'components/ContinueButton';\nconst { BehaviorsList } = Styled;\nconst BehaviorsContent = ({ data }) => {\n    const [selectedItems, setSelectedItems] = useState([]);\n    const [isSelected, setIsSelected] = useState(false)\n\n    useEffect(() => {\n        setIsSelected(selectedItems.length > 0);\n    }, [selectedItems]);\n\n    const handleChooseItem = item => {\n        if (!selectedItems.includes(item)) {\n            setSelectedItems([...selectedItems, item]);\n        } else {\n            setSelectedItems(\n                selectedItems.filter(selectedItem => selectedItem !== item)\n            );\n        }\n    };\n\n    const items = data.map((item, index) => (\n        <BehaviorsContentItem\n            key={index}\n            item={item}\n            items={selectedItems}\n            handleChooseItem={handleChooseItem}\n        />\n    ));\n\n    return (\n        <>\n            <BehaviorsList>{items}</BehaviorsList>\n            <ContinueButton text=\"Continue\" to=\"/step-4\" selectedItems={selectedItems} isSelectedItems={isSelected}/>\n        </>\n    );\n};\n\nexport default BehaviorsContent;\n","import behaviors from 'data/behaviors';\nimport Main from 'components/Main';\nimport BackLink from 'components/BackLink';\nimport Banner from 'components/Banner';\nimport BehaviorsContent from 'components/BehaviorsContent';\nimport Container from 'components/Container';\n\nconst Behaviors = ({ to }) => {\n    return (\n        <Main>\n            <BackLink to={to} left=\"left\" />\n            <Container>\n                <Banner\n                    title=\"Destructive behaviors\"\n                    text=\"We all have them! Which are yours?\"\n                />\n                <BehaviorsContent data={behaviors} />\n            </Container>\n        </Main>\n    );\n};\n\nexport default Behaviors;\n"],"names":["styled","Link","_templateObject","_taggedTemplateLiteral","props","theme","colors","green","white","fonts","inter","_ref","enter","select","text","to","data","isEnterData","selectedItems","isSelectedItems","addInfo","useUser","_jsx","ContinueButtonStyled","toString","onClick","children","image","BehaviorsList","BehaviorItem","concat","lightGrey","selected","BehaviorText","_templateObject2","generalBlack","Styled","item","items","handleChooseItem","_jsxs","includes","src","alt","_useState","useState","_useState2","_slicedToArray","setSelectedItems","_useState3","_useState4","isSelected","setIsSelected","useEffect","length","filter","selectedItem","_toConsumableArray","map","index","BehaviorsContentItem","_Fragment","ContinueButton","Main","BackLink","left","Container","Banner","title","BehaviorsContent","behaviors"],"sourceRoot":""}